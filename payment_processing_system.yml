openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Payment Processing
  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
  contact:
    name: Swagger API Team
    email: nizhikebinesi@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080/api
paths:
#  /balances:
#    get:
#      description: |
#        Returns all balances from the system.
#      operationId: findBalances
#      parameters:
#        - name: sort
#          in: query
#          description: key to sort by - id, date, amount
#          required: false
#          schema:
#            type: string
#            enum: ["id", "date", "amount"]
#        - name: limit
#          in: query
#          description: maximum number of results to return
#          required: false
#          schema:
#            type: integer
#            format: uint64
#        - name: page
#          in: query
#          description: page of collection
#          required: false
#          schema:
#            type: integer
#            format: uint64
#      responses:
#        '200':
#          description: balance response
#          content:
#            application/json:
#              schema:
#                type: array
#                items:
#                  $ref: '#/components/schemas/Balance'
#        default:
#          description: unexpected error
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Error'
  /balances/{idFrom}/transfer/{idTo}:
    post:
      description: Transfer money from idFrom balance to idTo balance
      operationId: transfer by ids
      parameters:
        - name: idFrom
          in: path
          description: ID of balance to write off
          required: true
          schema:
            type: integer
            format: int64
        - name: idTo
          in: path
          description: ID of balance to accrue
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /balances/{id}/transactions:
    get:
      description: Returns transactions binded with single ID
      operationId: get binded transactions
      parameters:
        - name: id
          in: path
          description: ID of balance to fetch
          required: true
          schema:
            type: integer
            format: int64
        - name: sort
          in: query
          description: key to sort by - id, date, amount
          required: false
          schema:
            type: string
            enum: ["id", "date", "amount"]
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: uint64
        - name: page
          in: query
          description: page of collection
          required: false
          schema:
            type: integer
            format: uint64
      responses:
        '200':
          description: transactions of the balance response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transactions'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reservation/balances/{id}:
    post:
      description: Reserve balance
      operationId: reserve on separate account
      parameters:
        - name: id
          in: path
          description: ID of balance to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reservation/balances/{id}/confirm:
    post:
      description: Confirm reservation
      operationId: confirm reservation
      parameters:
        - name: id
          in: path
          description: ID of balance to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reservation/balances/{id}/cancel:
    post:
      description: Cancel reservation
      operationId: cancel reservation
      parameters:
        - name: id
          in: path
          description: ID of balance to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /balances/{id}:
    get:
      description: Returns a balance based on a single ID
      operationId: get balance by id
      parameters:
        - name: id
          in: path
          description: ID of balance to fetch
          required: true
          schema:
            type: integer
            format: int64
        - name: currency
          in: query
          description: Currency to display balance
          required: false
          schema:
            type: string
      responses:
        '200':
          description: balance response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new balance(by accrual) or decreases an existed balance. Duplicates are not allowed.
      operationId: accrueOrWriteOffBalance
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: amount to change the balance
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBalance'
      responses:
        '200':
          description: new transaction response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewTransaction'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Transactions:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Transaction'
          - type: object
    NewTransaction:
      type: object
      required:
        - id
        - source_id
        - destination_id
        - amount
        - ttype
        - date_time_created
        - date_time_updated
        - status
      properties:
        id:
          type: integer
          format: uint64
        source_id:
          type: integer
          format: int64
          nullable: true
        destination_id:
          type: integer
          format: int64
          nullable: true
        amount:
          type: string
          pattern: "^[-]?[0-9]*\\.?[0-9]+$"
        ttype:
          type: string
        date_time_created:
          type: string
          format: date-time
        date_time_updated:
          type: string
          format: date-time
        status:
          type: string
    Transaction:
      allOf:
        - $ref: '#/components/schemas/NewTransaction'
        - type: object
    Balance:
      allOf:
        - $ref: '#/components/schemas/NewBalance'
        - type: object
    NewBalance:
      type: object
      required:
        - amount
        - id
      properties:
        id:
          type: integer
          format: int64
        amount:
          type: string
          pattern: "^[-]?[0-9]*\\.?[0-9]+$"
#          type: number
#          multipleOf: 0.01
##          format: float
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string