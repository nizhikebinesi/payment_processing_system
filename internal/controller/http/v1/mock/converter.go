// Code generated by mockery v2.16.0. DO NOT EDIT.

package mock

import mock "github.com/stretchr/testify/mock"

// Converter is an autogenerated mock type for the Converter type
type Converter struct {
	mock.Mock
}

// ConvertFromRUBToCurrency provides a mock function with given fields: amount, currency
func (_m *Converter) ConvertFromRUBToCurrency(amount float32, currency string) (float32, error) {
	ret := _m.Called(amount, currency)

	var r0 float32
	if rf, ok := ret.Get(0).(func(float32, string) float32); ok {
		r0 = rf(amount, currency)
	} else {
		r0 = ret.Get(0).(float32)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(float32, string) error); ok {
		r1 = rf(amount, currency)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewConverter interface {
	mock.TestingT
	Cleanup(func())
}

// NewConverter creates a new instance of Converter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewConverter(t mockConstructorTestingTNewConverter) *Converter {
	mock := &Converter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
