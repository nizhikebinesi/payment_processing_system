// Code generated by mockery v2.16.0. DO NOT EDIT.

package mock

import (
	context "context"
	entity "payment_processing_system/internal/domain/entity"

	mock "github.com/stretchr/testify/mock"
)

// BalanceService is an autogenerated mock type for the BalanceService type
type BalanceService struct {
	mock.Mock
}

// ChangeAmount provides a mock function with given fields: ctx, id, amount
func (_m *BalanceService) ChangeAmount(ctx context.Context, id string, amount float32) error {
	ret := _m.Called(ctx, id, amount)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, float32) error); ok {
		r0 = rf(ctx, id, amount)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetByID provides a mock function with given fields: ctx, id
func (_m *BalanceService) GetByID(ctx context.Context, id string) (*entity.Balance, error) {
	ret := _m.Called(ctx, id)

	var r0 *entity.Balance
	if rf, ok := ret.Get(0).(func(context.Context, string) *entity.Balance); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.Balance)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewBalanceService interface {
	mock.TestingT
	Cleanup(func())
}

// NewBalanceService creates a new instance of BalanceService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBalanceService(t mockConstructorTestingTNewBalanceService) *BalanceService {
	mock := &BalanceService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
